name: Check PR for integration branches

on:
  push:
    branches:
      - integrate-main-to/**/*

jobs:
  createPR:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    outputs:
      pr_created: ${{ steps.create_pr.outputs.created }}
    steps:
    - uses: actions/checkout@v3
    - name: Checks if PR already exists
      id: pr_exists
      run: |
        PR_INFO=$(gh pr list --state open --head $HEAD_BRANCH --json title)
        if [[ ! "$PR_INFO" = "[]" ]]; then
          echo "result=true" >> $GITHUB_OUTPUT
        else
          echo "result=false" >> $GITHUB_OUTPUT
        fi
      env:
        GH_TOKEN: ${{ github.token }}
        HEAD_BRANCH: ${{ github.ref_name }}
    - name: Get base branch
      id: base_branch
      run: echo "branch=${ORIGINAL_BRANCH#integrate-main-to/}" >> $GITHUB_OUTPUT
      env:
        ORIGINAL_BRANCH: ${{ github.ref_name }}
    - name: Create pull request
      id: create_pr
      run: |
        if [[ ! "$PR_EXISTS" = "true" ]]; then
          gh pr create -B $BASE_BRANCH -H $HEAD_BRANCH --title "Merge branch 'main' into '$BASE_BRANCH'" --body "Pull request automatically created because conflicts existed between 'main' and '$BASE_BRANCH'"
          echo "created=true" >> $GITHUB_OUTPUT
        else
          echo "created=false" >> $GITHUB_OUTPUT
        fi
      env:
        GH_TOKEN: ${{ github.token }}
        HEAD_BRANCH: ${{ github.ref_name }}
        BASE_BRANCH: ${{ steps.base_branch.outputs.branch }}
        PR_EXISTS: ${{ steps.pr_exists.outputs.result }}
  closePR:
    runs-on: ubuntu-latest
    needs: createPR
    if: needs.createPR.outputs.pr_created == 'false'
    permissions:
      contents: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Checks if PR already exists
      id: pr_exists
      run: |
        PR_INFO=$(gh pr list --state open --head $HEAD_BRANCH --json title)
        if [[ ! "$PR_INFO" = "[]" ]]; then
          echo "result=true" >> $GITHUB_OUTPUT
        else
          echo "result=false" >> $GITHUB_OUTPUT
        fi
      env:
        GH_TOKEN: ${{ github.token }}
        HEAD_BRANCH: ${{ github.ref_name }}
    - name: Check if pr can be closed
      id: is_mergeable
      run: |
        IS_MERGEABLE=$(gh pr view $HEAD_BRANCH --json mergeable -q ".mergeable")
        if [[ "$IS_MERGEABLE" = "MERGEABLE" ]]; then
          echo "result=true" >> $GITHUB_OUTPUT
        else
          echo "result=false" >> $GITHUB_OUTPUT
        fi
      env:
        GH_TOKEN: ${{ github.token }}
        HEAD_BRANCH: ${{ github.ref_name }}
    - name: Merge pull request
      if: steps.is_mergeable.outputs.result == 'true'
      run: |
        BASE_BRANCH=${HEAD_BRANCH#integrate-main-to/}
        git checkout $BASE_BRANCH
        gh pr merge $HEAD_BRANCH --merge --delete-branch --subject "Merge branch 'main' into '$BASE_BRANCH'"
      env:
        GH_TOKEN: ${{ github.token }}
        HEAD_BRANCH: ${{ github.ref_name }}
